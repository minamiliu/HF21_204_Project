//============================================
//
// タイトル:	 CL25課題
// プログラム名: enemy.cpp
// 作成者:		 HAL東京ゲーム学科　劉南宏
// 作成日:       2016/11/18
//
//============================================

//============================================
//インクルードファイル
//============================================
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "foodIcon.h"


//============================================
// マクロ定義
//============================================
#define TEXTURE_TOMATO	"data/TEXTURE/tomato.png"
#define TEXTURE_CABBAGE "data/TEXTURE/cabbage.png"
#define TEXTURE_MEAT	"data/TEXTURE/meat.png"

//============================================
// 静的メンバー変数の初期化
//============================================
//LPDIRECT3DTEXTURE9 CFoodIcon::m_pTexture[CFoodIcon::TYPE_MAX] = {};


//=============================================================================
// 構造体定義
//=============================================================================

//=============================================================================
//コンストラクタ
//=============================================================================
CFoodIcon::CFoodIcon()
{

}

//=============================================================================
//デストラクタ
//=============================================================================
CFoodIcon::~CFoodIcon()
{
	
}


//=============================================================================
// 食材の初期化処理
//=============================================================================

HRESULT CFoodIcon::Init(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	CScene2D::Init(pos, size);

	//灰色にする
	this->SetColor(BLACK(0.7f));

	return S_OK;
}




//=============================================================================
// 食材の終了処理
//=============================================================================
void CFoodIcon::Uninit(void)
{
	CScene2D::Uninit();
}


//=============================================================================
// 食材の更新処理
//=============================================================================
void CFoodIcon::Update(void)
{

}

//=============================================================================
// 食材の描画処理
//=============================================================================
void CFoodIcon::Draw(void)
{
	CScene2D::Draw();
}

//=============================================================================
// 食材の生成処理
//=============================================================================
CFoodIcon *CFoodIcon::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size, LPDIRECT3DTEXTURE9 pTexture)
{
	CFoodIcon *pFoodIcon;
	pFoodIcon = new CFoodIcon;
	pFoodIcon->Init(pos, size);

	//テクスチャの割り当て
	pFoodIcon->BindTexture( pTexture);
	
	return pFoodIcon;
}

////=============================================================================
////テクスチャのロード
////=============================================================================
//HRESULT CFoodIcon::Load(void)
//{
//	for(int cntType = 0; cntType < TYPE_MAX; cntType++)
//	{
//		LPCSTR strFileName;
//		switch( cntType)
//		{
//		case TYPE_TOMATO:
//			strFileName = TEXTURE_TOMATO;
//			break;
//
//		case TYPE_CABBAGE:
//			strFileName = TEXTURE_CABBAGE;
//			break;
//
//		case TYPE_MEAT:
//			strFileName = TEXTURE_MEAT;
//			break;
//
//		}
//
//		if( m_pTexture[cntType] == NULL)
//		{
//			LPDIRECT3DDEVICE9 pDevice;
//			pDevice = CManager::GetRenderer()->GetDevice();
//
//			// テクスチャの読み込み
//			D3DXCreateTextureFromFile( pDevice, strFileName, &m_pTexture[cntType]);
//		}	
//	}
//
//
//	return S_OK;
//}
//
////=============================================================================
////テクスチャのアンロード
////=============================================================================
//void CFoodIcon::Unload(void)
//{
//	//テクスチャの破棄
//	for(int cntType = 0; cntType < TYPE_MAX; cntType++)
//	{
//		if( m_pTexture[cntType] != NULL)
//		{
//			m_pTexture[cntType]->Release();
//			m_pTexture[cntType] = NULL;
//		}	
//	}
//}
////=============================================================================
////食材の種類を取得
////=============================================================================
//CFoodIcon::TYPE CFoodIcon::GetType(void)
//{
//	return m_type;
//}
////=============================================================================
////食材全体の生成(ステージ0)
////=============================================================================
//void CFoodIcon::CreateAllFoodIcon(void)
//{
//	for(int cntType = 0; cntType < TYPE_MAX; cntType++)
//	{
//		CFoodIcon::Create(D3DXVECTOR3( 50.0f + cntType * 100.0f, 50.0f, 0.0f), D3DXVECTOR3(100.0f, 100.0f, 0.0f), (TYPE)cntType);
//	}
//}
