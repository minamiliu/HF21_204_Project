//============================================
//
// タイトル:	 未来創造展チーム204
// プログラム名: player2D.cpp
// 作成者:		 HAL東京ゲーム学科　劉南宏
// 作成日:       2016/10/19
//
//============================================

//============================================
//インクルードファイル
//============================================
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "message.h"

//============================================
// マクロ定義
//============================================

#define TEXTURE_START "data/TEXTURE/start.png"


#define TEXTURE_FINISH "data/TEXTURE/finish.png"
//============================================

//=============================================================================
// 構造体定義
//=============================================================================

//=============================================================================
//コンストラクタ
//=============================================================================
CMessage::CMessage()
{

}

//=============================================================================
//デストラクタ
//=============================================================================
CMessage::~CMessage()
{
	
}

//=============================================================================
// ポリゴンの初期化処理
//=============================================================================

HRESULT CMessage::Init(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{

	CScene2D::Init(pos, size);
	SetObjType( OBJTYPE_L_ITEM);

	return S_OK;
}

//=============================================================================
// ポリゴンの終了処理
//=============================================================================
void CMessage::Uninit(void)
{
	CScene2D::Uninit();
}


//=============================================================================
// ポリゴンの更新処理
//=============================================================================
void CMessage::Update(void)
{
	CScene2D::Update();
	D3DXVECTOR3 pos;
	pos = GetPosition();
	pos.x-=8;
	SetPosition(pos);
}

//=============================================================================
// ポリゴンの描画処理
//=============================================================================
void CMessage::Draw(void)
{
	CScene2D::Draw();
}

//=============================================================================
// ポリゴンの生成処理
//=============================================================================
CMessage *CMessage::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size,LPCSTR strFileName)
{
	CMessage *pMessage;
	pMessage = new CMessage;
	pMessage->Init(pos, size);
	//テクスチャの読み込み
	pMessage->CScene2D::Load( strFileName);
	return pMessage;
}

