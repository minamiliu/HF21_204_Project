/*******************************************************************************
* タイトル:		ゴリラ
* プログラム名:	timeBg.cpp
* 作成者:		小林玲雄
* 作成日:		2016/12/03
********************************************************************************
*******************************************************************************/
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "timeBg.h"
#include "manager.h"
#include "scene2D.h"
#include "sun.h"
/*******************************************************************************
* マクロ定義
*******************************************************************************/
#define TIMEBG_TEX_NAME1	"data/TEXTURE/ステージ用/stageBg.png"
#define TIMEBG_TEX_NAME2	"data/TEXTURE/ステージ用/stageBg2.png"
#define ANIM_PAT_X (4)
#define ANIM_PAT_Y (1)
#define ANIM_CANGE_FRAME (20)
/*******************************************************************************
* クラス定義
*******************************************************************************/
//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define NUM_VERTEX		(4)			// 頂点数
#define NUM_POLYGON		(2)			// ポリゴン数
// 頂点フォーマット( 頂点座標[2D] / 頂点カラー / テクスチャ座標 )
#define	FVF_VERTEX_2D	(D3DFVF_XYZRHW | D3DFVF_DIFFUSE | D3DFVF_TEX1)
//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// 静的
//*****************************************************************************
bool CTimeBg::m_bScl = false;
//=============================================================================
// コンストラクタ
//=============================================================================
CTimeBg :: CTimeBg()
{
	m_time = 0;
	m_animPat = 0;
	
}
//=============================================================================
// デストラクタ
//=============================================================================
CTimeBg :: ~CTimeBg()
{
}
/*nTypeについて*/
//0の場合は画面上部の背景
//1の場合は画面下部に被さる薄暗い画像
CTimeBg* CTimeBg::Create(D3DXVECTOR3 pos,D3DXVECTOR3 size,int animPat,int ntype)
{
	CTimeBg *pTimeBg;
	pTimeBg = new CTimeBg;
	pTimeBg->Init(pos,size,animPat);
	switch(ntype)
	{
	case 0:
	pTimeBg->Load(TIMEBG_TEX_NAME1);
	break;
	case 1:
	pTimeBg->Load(TIMEBG_TEX_NAME2);
	break;
	}
	return pTimeBg;
}
//=============================================================================
// ポリゴンの初期化処理
//=============================================================================
HRESULT CTimeBg :: Init(void)
{
	CScene2D::Init();


	return S_OK;
}
//=============================================================================
// ポリゴンの初期化処理(オーバーロード)
//=============================================================================
HRESULT CTimeBg :: Init(D3DXVECTOR3 pos,D3DXVECTOR3 size,int animPat)
{
	CScene2D::Init(pos,size);

	m_animPat = animPat;
	
	CScene2D::SetTexture(ANIM_PAT_X,ANIM_PAT_Y,m_animPat);
	return S_OK;
}
//=============================================================================
// ポリゴンの終了処理
//=============================================================================
void CTimeBg :: Uninit(void)
{
	CScene2D::Uninit();
}
//=============================================================================
// ポリゴンの更新処理
//=============================================================================
void CTimeBg :: Update(void)
{
	D3DXVECTOR3 posTimeBg = GetPosition();
	D3DXVECTOR3 sizeTimeBg = GetSize();

	if(m_bScl == true)
	{
		m_time++;
		if(m_time <=60)
		{
			CScene2D::Scl(0.25/60,CScene2D::SCL_RIGHT);
		}
	}

	this->CTimeBg::SetPosition(posTimeBg);
}
//=============================================================================
// ポリゴンの描画処理
//=============================================================================
void CTimeBg :: Draw(void)
{
	CScene2D::Draw();
}

void CTimeBg::SetScl(bool bScl)
{
	m_bScl = bScl;
}