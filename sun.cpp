/*******************************************************************************
* タイトル:		ゴリラ
* プログラム名:	sun.cpp
* 作成者:		小林玲雄
* 作成日:		2016/12/03
********************************************************************************
*******************************************************************************/
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "sun.h"
#include "manager.h"
#include "renderer.h"
#include "scene2D.h"
#include "stageBg.h"
/*******************************************************************************
* マクロ定義
*******************************************************************************/
#define SUN_TEX_NAME	"data/TEXTURE/ステージ用/sun2.png"
#define ANIM_PAT_X (2)
#define ANIM_PAT_Y (1)
#define ANIM_CANGE_FRAME (15)
/*******************************************************************************
* クラス定義
*******************************************************************************/
//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define NUM_VERTEX		(4)			// 頂点数
#define NUM_POLYGON		(2)			// ポリゴン数
// 頂点フォーマット( 頂点座標[2D] / 頂点カラー / テクスチャ座標 )
#define	FVF_VERTEX_2D	(D3DFVF_XYZRHW | D3DFVF_DIFFUSE | D3DFVF_TEX1)


#define MOVE_TIME (60)
//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// 静的
//*****************************************************************************

bool CSun::m_bMove = false;
D3DXVECTOR3 CSun::center = D3DXVECTOR3(SCREEN_WIDTH/2,SCREEN_HEIGHT,0);
//=============================================================================
// コンストラクタ
//=============================================================================
CSun :: CSun()
{
	m_time = 0;
	m_animPat = 0;
	m_animCnt = 0;
	m_fRot = 0.0f;
}
//=============================================================================
// デストラクタ
//=============================================================================
CSun :: ~CSun()
{
}
CSun* CSun::Create(D3DXVECTOR3 pos,D3DXVECTOR3 size,float fRot)
{
	CSun *pSun;
	pSun = new CSun;
	pSun->Init(pos,size,fRot);
	
	pSun->Load(SUN_TEX_NAME);

	return pSun;
}
//=============================================================================
// ポリゴンの初期化処理
//=============================================================================
HRESULT CSun :: Init(void)
{
	CScene2D::Init();


	return S_OK;
}
//=============================================================================
// ポリゴンの初期化処理(オーバーロード)
//=============================================================================
HRESULT CSun :: Init(D3DXVECTOR3 pos,D3DXVECTOR3 size,float fRot)
{
	CScene2D::Init(pos,size);

	CScene2D::SetTexture(ANIM_PAT_X,ANIM_PAT_Y,m_animPat);

	m_fRot = fRot;
	
	D3DXVECTOR3 posSun = GetPosition();
	posSun.x = center.x + SCREEN_WIDTH/2 * cosf(D3DXToRadian(fRot));
	posSun.y = center.y + SCREEN_WIDTH/2 * sinf(D3DXToRadian(fRot));
	this->CSun::SetPosition(posSun);

	return S_OK;
}
//=============================================================================
// ポリゴンの終了処理
//=============================================================================
void CSun :: Uninit(void)
{
	CScene2D::Uninit();
}
//=============================================================================
// ポリゴンの更新処理
//=============================================================================
void CSun :: Update(void)
{
	D3DXVECTOR3 posSun = GetPosition();
	D3DXVECTOR3 sizeSun = GetSize();

	m_time++;
	m_animCnt++;
	//m_fRot 0.1 = 7.5度?
	if(m_time > 60)
	{
		if(m_time<120)
		{
			m_fRot+=(0.4f/60);
		}
	}

	if(m_animCnt % ANIM_CANGE_FRAME == 0)
	{
		m_animPat++;
	}

	CScene2D::SetTexture(ANIM_PAT_X,ANIM_PAT_Y,m_animPat);

	posSun.x = center.x + SCREEN_WIDTH/2 * cosf(m_fRot);
	posSun.y = center.y + SCREEN_WIDTH/2 * sinf(m_fRot);
	
	this->CSun::SetPosition(posSun);
}
//=============================================================================
// ポリゴンの描画処理
//=============================================================================
void CSun :: Draw(void)
{
	CScene2D::Draw();
}
