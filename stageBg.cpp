/*******************************************************************************
* タイトル:		ゴリラ
* プログラム名:	stageBg.cpp
* 作成者:		小林玲雄
* 作成日:		2016/12/03
********************************************************************************
*******************************************************************************/
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "stageBg.h"
#include "manager.h"
#include "scene2D.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/
#define STAGEBG_TEX_NAME	"data/TEXTURE/ステージ用/草原.png"
#define ANIM_PAT_X (4)
#define ANIM_PAT_Y (1)
#define ANIM_CANGE_FRAME (20)
/*******************************************************************************
* クラス定義
*******************************************************************************/
//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define NUM_VERTEX		(4)			// 頂点数
#define NUM_POLYGON		(2)			// ポリゴン数
// 頂点フォーマット( 頂点座標[2D] / 頂点カラー / テクスチャ座標 )
#define	FVF_VERTEX_2D	(D3DFVF_XYZRHW | D3DFVF_DIFFUSE | D3DFVF_TEX1)
//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// 静的
//*****************************************************************************
bool CStageBg::m_bScl = false;
//=============================================================================
// コンストラクタ
//=============================================================================
CStageBg :: CStageBg()
{
	m_time = 0;
	m_animPat = 0;
	
}
//=============================================================================
// デストラクタ
//=============================================================================
CStageBg :: ~CStageBg()
{
}
CStageBg* CStageBg::Create(D3DXVECTOR3 pos,D3DXVECTOR3 size)
{
	CStageBg *pStageBg;
	pStageBg = new CStageBg;
	pStageBg->Init(pos,size);
	
	pStageBg->Load(STAGEBG_TEX_NAME);
	return pStageBg;
}
//=============================================================================
// ポリゴンの初期化処理
//=============================================================================
HRESULT CStageBg :: Init(void)
{
	CScene2D::Init();


	return S_OK;
}
//=============================================================================
// ポリゴンの初期化処理(オーバーロード)
//=============================================================================
HRESULT CStageBg :: Init(D3DXVECTOR3 pos,D3DXVECTOR3 size)
{
	CScene2D::Init(pos,size);

	CScene2D::SetTexture(ANIM_PAT_X,ANIM_PAT_Y,m_animPat);

	return S_OK;
}
//=============================================================================
// ポリゴンの終了処理
//=============================================================================
void CStageBg :: Uninit(void)
{
	CScene2D::Uninit();
}
//=============================================================================
// ポリゴンの更新処理
//=============================================================================
void CStageBg :: Update(void)
{
	D3DXVECTOR3 posStageBg = GetPosition();
	D3DXVECTOR3 sizeStageBg = GetSize();
	m_time++;
	if(m_bScl == true)
	{
		CScene2D::Scl(0.001,CScene2D::SCL_RIGHT);
	}


	this->CStageBg::SetPosition(posStageBg);
}
//=============================================================================
// ポリゴンの描画処理
//=============================================================================
void CStageBg :: Draw(void)
{
	CScene2D::Draw();
}

void CStageBg::SetScl(bool bScl)
{
	m_bScl = bScl;
}