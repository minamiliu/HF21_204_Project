/*******************************************************************************
* タイトル:		ゴリラ
* プログラム名:	text.cpp
* 作成者:		小林玲雄
* 作成日:		2016/12/03
********************************************************************************
*******************************************************************************/
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "text.h"
#include "manager.h"
#include "scene2D.h"
#include "sun.h"
/*******************************************************************************
* マクロ定義
*******************************************************************************/
#define TEXT_TEX_GORIRA	"data/TEXTURE/ステージ用/ゴリラ説明文.png"
#define TEXT_TEX_ZEBRA	"data/TEXTURE/ステージ用/シマウマ説明文.png"
#define TEXT_TEX_LION	"data/TEXTURE/ステージ用/ライオン説明文.png"
#define ANIM_PAT_X (2)
#define ANIM_PAT_Y (1)
#define ANIM_CANGE_FRAME (20)
/*******************************************************************************
* クラス定義
*******************************************************************************/
//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define NUM_VERTEX		(4)			// 頂点数
#define NUM_POLYGON		(2)			// ポリゴン数
// 頂点フォーマット( 頂点座標[2D] / 頂点カラー / テクスチャ座標 )
#define	FVF_VERTEX_2D	(D3DFVF_XYZRHW | D3DFVF_DIFFUSE | D3DFVF_TEX1)
//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// 静的
//*****************************************************************************
bool CText::m_bScl = false;
//=============================================================================
// コンストラクタ
//=============================================================================
CText :: CText()
{
	m_time = 0;
	m_animPat = 0;
	m_bScl = false;
}
//=============================================================================
// デストラクタ
//=============================================================================
CText :: ~CText()
{
}

CText* CText::Create(D3DXVECTOR3 pos,D3DXVECTOR3 size,int animPat,int ntype)
{
	CText *pText;
	pText = new CText;
	pText->Init(pos,size,animPat);
	switch(ntype)
	{
	case 0:
	pText->Load(TEXT_TEX_GORIRA);
	break;
	case 1:
	pText->Load(TEXT_TEX_ZEBRA);
	break;
	case 2:
	pText->Load(TEXT_TEX_LION);
	break;
	}

	
	return pText;
}
//=============================================================================
// ポリゴンの初期化処理
//=============================================================================
HRESULT CText :: Init(void)
{
	CScene2D::Init();


	return S_OK;
}
//=============================================================================
// ポリゴンの初期化処理(オーバーロード)
//=============================================================================
HRESULT CText :: Init(D3DXVECTOR3 pos,D3DXVECTOR3 size,int animPat)
{
	CScene2D::Init(pos,size);
	
	CScene2D::SetTexture(ANIM_PAT_X,ANIM_PAT_Y,m_animPat);
	m_animPat = animPat;
	return S_OK;
}
//=============================================================================
// ポリゴンの終了処理
//=============================================================================
void CText :: Uninit(void)
{
	CScene2D::Uninit();
}
//=============================================================================
// ポリゴンの更新処理
//=============================================================================
void CText :: Update(void)
{
	D3DXVECTOR3 posText = GetPosition();
	D3DXVECTOR3 sizeText = GetSize();
	m_time++;
	if(m_time>130)
	{
		m_bScl=true;
	}

	if(m_bScl == true)
	{
		CScene2D::Scl(0.001,CScene2D::SCL_RIGHT);
	}

	this->CText::SetPosition(posText);
}
//=============================================================================
// ポリゴンの描画処理
//=============================================================================
void CText :: Draw(void)
{
	if(m_time>120)
	{
		CScene2D::Draw();
	}
}

void CText::SetScl(bool bScl)
{
	m_bScl = bScl;
}